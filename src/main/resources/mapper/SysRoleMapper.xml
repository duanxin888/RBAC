<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.duanxin.dao.SysRoleMapper">
  <resultMap id="BaseResultMap" type="com.duanxin.model.SysRole">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
    <result column="operate_time" jdbcType="TIMESTAMP" property="operateTime" />
    <result column="operate_ip" jdbcType="VARCHAR" property="operateIp" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, type, status, remark, operator, operate_time, operate_ip
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_role
    where id = #{id,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_role
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.duanxin.model.SysRole">
    insert into sys_role (id, name, type, 
      status, remark, operator, 
      operate_time, operate_ip)
    values (#{record.id,jdbcType=INTEGER}, #{record.name,jdbcType=VARCHAR}, #{record.type,jdbcType=INTEGER},
      #{record.status,jdbcType=INTEGER}, #{record.remark,jdbcType=VARCHAR}, #{record.operator,jdbcType=VARCHAR},
      #{record.operateTime,jdbcType=TIMESTAMP}, #{record.operateIp,jdbcType=VARCHAR})
  </insert>

  <insert id="insertSelective" parameterType="com.duanxin.model.SysRole" keyProperty="id" useGeneratedKeys="true">
    insert into sys_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="record.id != null">
        id,
      </if>
      <if test="record.name != null">
        name,
      </if>
      <if test="record.type != null">
        type,
      </if>
      <if test="record.status != null">
        status,
      </if>
      <if test="record.remark != null">
        remark,
      </if>
      <if test="record.operator != null">
        operator,
      </if>
      <if test="record.operateTime != null">
        operate_time,
      </if>
      <if test="record.operateIp != null">
        operate_ip,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="record.id != null">
        #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.operator != null">
        #{record.operator,jdbcType=VARCHAR},
      </if>
      <if test="record.operateTime != null">
        #{record.operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.operateIp != null">
        #{record.operateIp,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.duanxin.model.SysRole">
    update sys_role
    <set>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.operator != null">
        operator = #{record.operator,jdbcType=VARCHAR},
      </if>
      <if test="record.operateTime != null">
        operate_time = #{record.operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.operateIp != null">
        operate_ip = #{record.operateIp,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{record.id,jdbcType=INTEGER}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.duanxin.model.SysRole">
    update sys_role
    set name = #{record.name,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      operator = #{record.operator,jdbcType=VARCHAR},
      operate_time = #{record.operateTime,jdbcType=TIMESTAMP},
      operate_ip = #{record.operateIp,jdbcType=VARCHAR}
    where id = #{record.id,jdbcType=INTEGER}
  </update>

  <select id="countRoleByName" parameterType="map" resultType="int">
    select count(1)
    from sys_role
    where `name` = #{name}
    <if test="id != null">
     and id != #{id}
    </if>
  </select>

  <select id="getAll" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from sys_role
  </select>

  <select id="getByIdList" parameterType="map" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from sys_role
    where id in
    <foreach collection="roleIdList" item="id" open="(" close=")" separator=",">
      #{id}
    </foreach>
  </select>
</mapper>